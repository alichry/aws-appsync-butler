"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1753],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7523:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],o={id:"Builder",title:"Class: Builder",sidebar_label:"Builder",sidebar_position:0,custom_edit_url:null},s=void 0,p={unversionedId:"api/classes/Builder",id:"api/classes/Builder",title:"Class: Builder",description:"Build a resolver tree from a VTL directory.",source:"@site/docs/api/classes/Builder.md",sourceDirName:"api/classes",slug:"/api/classes/Builder",permalink:"/aws-appsync-butler/docs/api/classes/Builder",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Builder",title:"Class: Builder",sidebar_label:"Builder",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"ResolverType",permalink:"/aws-appsync-butler/docs/api/enums/ResolverType"},next:{title:"CdkLoader",permalink:"/aws-appsync-butler/docs/api/classes/CdkLoader"}},u=[{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4}],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"parser",id:"parser",children:[],level:3},{value:"resolvers",id:"resolvers",children:[],level:3},{value:"functions",id:"functions",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"build",id:"build",children:[{value:"Returns",id:"returns",children:[],level:4}],level:3}],level:2}],d={toc:u};function c(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Build a resolver tree from a VTL directory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { Builder } from 'aws-appsync-butler';\nconst builder = new Builder();\nbuilder.build();\nconst { getPost } = builder.resolvers.Query;\nconst { getUserById } = builder.functions;\n")),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new Builder"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"optionsOrRoot?"),")"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"optionsOrRoot?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"../interfaces/ParserOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"ParserOptions"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Path to VTL directory or parsing instructions")))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"parser"},"parser"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"parser"),": ",(0,i.kt)("a",{parentName:"p",href:"Parser"},(0,i.kt)("inlineCode",{parentName:"a"},"Parser"))),(0,i.kt)("p",null,"The underlying parser instance that is responsible for parsing\nresolvers and functions."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resolvers"},"resolvers"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"resolvers"),": ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ResolverTree"},(0,i.kt)("inlineCode",{parentName:"a"},"ResolverTree"))),(0,i.kt)("p",null,"The resolver tree object, only populated after calling ",(0,i.kt)("inlineCode",{parentName:"p"},"build()")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"functions"},"functions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"functions"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ParsedFunctionInfo"},(0,i.kt)("inlineCode",{parentName:"a"},"ParsedFunctionInfo")),">"),(0,i.kt)("p",null,"The function dictionary object, only populated after calling ",(0,i.kt)("inlineCode",{parentName:"p"},"build()"),"\nKeys are function names and values are parsed function information."),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"build"},"build"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"build"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Traverse all the stored resolvers and functions to\nbuild the resolver tree and function dictionary."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")))}c.isMDXComponent=!0}}]);